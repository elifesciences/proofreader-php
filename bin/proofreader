#!/usr/bin/env bash
set -e

if [ $# -eq 0 ]
then
    echo "No source folder specified"
    exit 1
fi

function first_that_exists()
{
    list=$1
    for file in $list
    do
        if [ -e "${file}" ]
        then
            echo "${file}"
            exit 0
        fi
    done 
    exit 1
}
current_file="${BASH_SOURCE[0]}"
if test -L "${current_file}"; then
    resolved_file=$(readlink "${current_file}")
else
    resolved_file="${current_file}"
fi
current_dir="$( cd "$( dirname "${resolved_file}" )" && pwd )"
parent_dir="$( cd "$( dirname "${resolved_file}" )" && cd .. && pwd )"
local_checkout_dir=$parent_dir
composer_installation_dir="${parent_dir}/elife/proofreader-php"
dir=$(first_that_exists "${composer_installation_dir} ${local_checkout_dir}")
vendor_bin=$(first_that_exists "${local_checkout_dir}/vendor/bin ${current_dir}")
code=$*

php_cs=$(first_that_exists "${dir}/.php_cs ${dir}/.php_cs.dist")
ruleset_xml=$(first_that_exists "${dir}/ruleset.xml ${dir}/ruleset.xml.dist")

echo "PHP-CS-Fixer consistency check with local project: $php_cs vs .php_cs"
$dir/bin/php-cs-fixer-consistency-check $php_cs .php_cs

for folder in $code; do
    if [[ $folder == --* ]]; then
        continue
    fi
    echo "PHP-CS-Fixer on $folder"
    $vendor_bin/php-cs-fixer -vv fix $folder --dry-run --config-file .php_cs
done

#echo "PHPMD"
#set +e
#comma_separated_folders=$(echo "$code" | sed -e "s/ /,/g")
#phpmd_output=$($vendor_bin/phpmd $comma_separated_folders text $ruleset_xml)
#phpmd_exit=$?
#set -e
## do not print parsing errors due to PHP syntax not handled yet by PHPMD
#echo "$phpmd_output" | grep -v "Unexpected token: "
#if [ "$phpmd_exit" -ne "0" ]; then
#    exit $phpmd_exit
#fi

if [[ "$1" == "--no-phpcpd" ]]; then
    echo "Skipping PHPCPD, as requested"
else
    echo "PHPCPD"
    $vendor_bin/phpcpd $code
fi

